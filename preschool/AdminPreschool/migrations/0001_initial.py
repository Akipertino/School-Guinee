# Generated by Django 5.1.2 on 2024-12-26 10:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('capacite', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme'), ('Autres', 'Autres')], max_length=10)),
                ('date_naissance', models.DateField()),
                ('telephone', models.CharField(max_length=15)),
                ('date_entree', models.DateField()),
                ('qualification', models.CharField(max_length=100)),
                ('experience', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('adresse', models.CharField(max_length=255)),
                ('ville', models.CharField(max_length=100)),
                ('matricule', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InscriptionEleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=100, unique=True, verbose_name='Matricule')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_matiere', models.CharField(max_length=50, unique=True)),
                ('nom', models.CharField(max_length=50)),
                ('coefficient', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prenom', models.CharField(max_length=100)),
                ('nom', models.CharField(max_length=100)),
                ('matricule', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme'), ('Autres', 'Autres')], default='Autres', max_length=10)),
                ('date_naissance', models.DateField()),
                ('religion', models.CharField(max_length=50)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photo_eleves/')),
                ('nom_pere', models.CharField(max_length=100, verbose_name='Nom du père')),
                ('profession_pere', models.CharField(max_length=100, verbose_name='Profession du père')),
                ('telephone_pere', models.CharField(max_length=15, verbose_name='Téléphone du père')),
                ('email_pere', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email du père')),
                ('nom_mere', models.CharField(max_length=100, verbose_name='Nom de la mère')),
                ('profession_mere', models.CharField(max_length=100, verbose_name='Profession de la mère')),
                ('telephone_mere', models.CharField(max_length=15, verbose_name='Téléphone de la mère')),
                ('email_mere', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de la mère')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.classe')),
            ],
        ),
        migrations.CreateModel(
            name='EnseignantClasse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.enseignant')),
            ],
            options={
                'unique_together': {('enseignant', 'classe')},
            },
        ),
        migrations.AddField(
            model_name='enseignant',
            name='classes',
            field=models.ManyToManyField(related_name='enseignant', through='AdminPreschool.EnseignantClasse', to='AdminPreschool.classe'),
        ),
        migrations.CreateModel(
            name='EnseignantMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.matiere')),
            ],
            options={
                'unique_together': {('enseignant', 'matiere')},
            },
        ),
        migrations.AddField(
            model_name='enseignant',
            name='matiere',
            field=models.ManyToManyField(related_name='enseignant', through='AdminPreschool.EnseignantMatiere', to='AdminPreschool.matiere'),
        ),
        migrations.CreateModel(
            name='Cour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=300)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('classe', models.ManyToManyField(related_name='cours', to='AdminPreschool.classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='AdminPreschool.enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='AdminPreschool.matiere')),
            ],
        ),
        migrations.AddField(
            model_name='matiere',
            name='niveau',
            field=models.ManyToManyField(related_name='matiere', to='AdminPreschool.niveau'),
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPreschool.niveau'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_saisie', models.DateField(auto_now_add=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='AdminPreschool.classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='AdminPreschool.eleve')),
                ('enseignant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='AdminPreschool.enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='AdminPreschool.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant'), ('eleve', 'Élève'), ('comptable', 'Comptable')], max_length=20)),
                ('matricule', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='enseignant',
            name='utilisateur',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enseignant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eleve',
            name='utilisateur',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eleve', to=settings.AUTH_USER_MODEL),
        ),
    ]
